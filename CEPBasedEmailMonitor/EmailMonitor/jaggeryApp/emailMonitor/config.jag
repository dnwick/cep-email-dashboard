<%
/*
 * Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 * 
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

var user = require('store').server.current(session);
if (!user) {
    response.sendRedirect('./login');
}
%>
<%
var verb = request.getMethod();

response.contentType = 'text/plain';

var util = require("util/utility.jag");

var log = new Log();
var serverUrl = util.getServiceUrl();
serverUrl = serverUrl + "EmailMonitorAdminService";

var emailMonitorAdminServiceStub = Packages.org.wso2.cep.email.monitor.stub.admin.EmailMonitorAdminServiceStub;
var myEmailMonitorAdminServiceStub = new emailMonitorAdminServiceStub(serverUrl);

var carbon = require('carbon');

var esbIP = carbon.server.ip;
var esbPort = carbon.server.httpsPort;

if(verb == "DELETE" || verb == "PUT" || verb == "GET") {
    response.status = 400;
    print("Only method allowed on this resource is HTTP POST");
} else if(verb == "POST") {

    var emailAddress="";
    var accessToken="";
    var refreshToken="";
    var clientId="";
    var clientSecret="";
    var esbUserName = request.getParameter("esbUserName");
    var esbPassword = request.getParameter("esbPassword");

    var oauthAttr = session.get("oauthAttributes");

    log.info("Retrieving Oauth attributes from Session");

    for(var key in oauthAttr){

        if(key=="access_token"){
            accessToken=oauthAttr[key];
        }
        if(key=="refresh_token"){
            refreshToken=oauthAttr[key];
        }
        if(key=="email"){
            emailAddress=oauthAttr[key];
        }
        if(key=="clientId"){
            clientId=oauthAttr[key];
        }
        if(key=="clientSecret"){
            clientSecret=oauthAttr[key];
        }
    }

    try{
        var offset = carbon.server.httpsPort - 9443;

        var cepPort = 7711 + offset;

        myEmailMonitorAdminServiceStub.addCEPConfigurations(esbIP, esbPort, esbUserName, esbPassword, emailAddress);

        myEmailMonitorAdminServiceStub.addESBConfigurations(esbIP, esbPort, esbUserName, esbPassword,
                esbUserName, esbPassword, emailAddress, accessToken,clientId,clientSecret,refreshToken, esbIP, cepPort);

        application.put('emailMon_isConfigured', true);

        response.status = 200;
        print("CEP and ESB configured successfully.");
    }
    catch(error){
        response.status = 500;
        log.debug(error);
        print("Please Enter valid Username and Password");
    }
}
%>
