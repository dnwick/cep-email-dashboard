<!--
 ~ Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ WSO2 Inc. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
-->
<inSequence  xmlns="http://ws.apache.org/ns/synapse">
    <log/>
    <payloadFactory media-type="xml">
                <format>
                    <ser:details xmlns:ser="urn:wso2.connector.gmail.passwordauthentication">
                        <ser:email>$1</ser:email>
                        <ser:password>$2</ser:password>
                        <ser:accessToken>$3</ser:accessToken>
                		<ser:clientId>$4</ser:clientId>
                		<ser:clientSecret>$5</ser:clientSecret>
                		<ser:refreshToken>$6</ser:refreshToken>
                        <ser:threadID>$7</ser:threadID>
                        <ser:label>$8</ser:label>
                    </ser:details>
                </format>
                <args>
                    <arg evaluator="xml" expression="get-property('email')"/>
                    <arg evaluator="xml" expression="get-property('password')"/>
                    <arg evaluator="xml" expression="get-property('accessToken')"/>
            		<arg evaluator="xml" expression="get-property('clientId')"/>
            		<arg evaluator="xml" expression="get-property('clientSecret')"/>
            		<arg evaluator="xml" expression="get-property('refreshToken')"/>
                    <arg evaluator="xml" expression="//root/threadID/text()"/>
                    <arg evaluator="xml" expression="//root/label/text()"/>
                </args>
            </payloadFactory>
	            <class name="org.wso2.carbon.gmail.mediator.util.PasswordDecryptor"/>
	            <property xmlns:ser="urn:wso2.connector.gmail.passwordauthentication" name="username" expression="//ser:email/text()"/>
	            <property xmlns:ser="urn:wso2.connector.gmail.passwordauthentication" name="password" expression="//ser:password/text()"/>
	            <property xmlns:ser="urn:wso2.connector.gmail.passwordauthentication" name="accessToken" expression="//ser:accessToken/text()"/>
	  			<property xmlns:ser="urn:wso2.connector.gmail.passwordauthentication" name="clientId" expression="//ser:clientId/text()"/>
	    		<property xmlns:ser="urn:wso2.connector.gmail.passwordauthentication" name="clientSecret" expression="//ser:clientSecret/text()"/>
	    		<property xmlns:ser="urn:wso2.connector.gmail.passwordauthentication" name="refreshToken" expression="//ser:refreshToken/text()"/>
	            <property xmlns:ser="urn:wso2.connector.gmail.passwordauthentication" name="threadID" expression="//ser:threadID/text()"/>
	            <property xmlns:ser="urn:wso2.connector.gmail.passwordauthentication" name="label" expression="//ser:label/text()"/>
            <gmail.init>
			   	<username>{$ctx:username}</username>
		    	<oauthAccessToken>{$ctx:accessToken}</oauthAccessToken>
		    	<oauthRefreshToken>{$ctx:refreshToken}</oauthRefreshToken>
		    	<oauthClientId>{$ctx:clientId}</oauthClientId>
		    	<oauthClientSecret>{$ctx:clientSecret}</oauthClientSecret>
			</gmail.init>
            <gmail.setLabels>
                <threadID>{$ctx:threadID}</threadID>
                <labels>{$ctx:label}</labels>
            </gmail.setLabels>
	<gmail.endSession/>
</inSequence>